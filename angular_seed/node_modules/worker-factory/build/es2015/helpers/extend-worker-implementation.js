import { generateUniqueNumber } from 'fast-unique-numbers';
import { renderUnknownPortIdError } from './error-renderers';
const CLEAN_UP_FUNCTIONS = new Map();
export const extendWorkerImplementation = (createWorker, partialWorkerImplementation) => {
    // @todo The spread operator can't be used here because TypeScript does not believe that partialWorkerImplementation is an object.
    return Object.assign({}, partialWorkerImplementation, {
        connect: ({ port }) => {
            port.start();
            const destroyWorker = createWorker(port, partialWorkerImplementation);
            const portId = generateUniqueNumber(CLEAN_UP_FUNCTIONS);
            CLEAN_UP_FUNCTIONS.set(portId, () => {
                destroyWorker();
                port.close();
                CLEAN_UP_FUNCTIONS.delete(portId);
            });
            return { result: portId };
        },
        disconnect: ({ portId }) => {
            const cleanUp = CLEAN_UP_FUNCTIONS.get(portId);
            if (cleanUp === undefined) {
                throw renderUnknownPortIdError({ portId: portId.toString() });
            }
            cleanUp();
            return { result: null };
        }
    });
};
//# sourceMappingURL=/build/es2015/helpers/extend-worker-implementation.js.map