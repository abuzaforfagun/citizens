var _this = this;
import * as tslib_1 from "tslib";
import { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';
export var createMessageHandler = function (receiver, workerImplementation, isSupportingTransferables) {
    return function (_a) {
        var _b = _a.data, id = _b.id, method = _b.method, params = _b.params;
        return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var messageHandler, response, synchronousResponse, _c, _d, result, _e, transferables, _f, _g, _h, err_1, _j, message, _k, status;
            return tslib_1.__generator(this, function (_l) {
                switch (_l.label) {
                    case 0:
                        messageHandler = workerImplementation[method];
                        _l.label = 1;
                    case 1:
                        _l.trys.push([1, 8, , 9]);
                        if (messageHandler === undefined) {
                            throw renderMethodNotFoundError({ method: method });
                        }
                        response = messageHandler(params);
                        if (response === undefined) {
                            throw renderMissingResponseError({ method: method });
                        }
                        if (!(response instanceof Promise)) return [3 /*break*/, 3];
                        return [4 /*yield*/, response];
                    case 2:
                        _c = _l.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _c = response;
                        _l.label = 4;
                    case 4:
                        synchronousResponse = _c;
                        if (!(id === null)) return [3 /*break*/, 5];
                        if (synchronousResponse.result !== undefined) {
                            throw renderUnexpectedResultError({ method: method });
                        }
                        return [3 /*break*/, 7];
                    case 5:
                        if (synchronousResponse.result === undefined) {
                            throw renderUnexpectedResultError({ method: method });
                        }
                        _d = synchronousResponse, result = _d.result, _e = _d.transferables, transferables = _e === void 0 ? [] : _e;
                        _g = (_f = receiver).postMessage;
                        _h = [{ id: id, result: result }];
                        return [4 /*yield*/, isSupportingTransferables];
                    case 6:
                        _g.apply(_f, _h.concat([(_l.sent()) ? transferables : []]));
                        _l.label = 7;
                    case 7: return [3 /*break*/, 9];
                    case 8:
                        err_1 = _l.sent();
                        _j = err_1, message = _j.message, _k = _j.status, status = _k === void 0 ? -32603 : _k;
                        receiver.postMessage({ error: { code: status, message: message }, id: id });
                        return [3 /*break*/, 9];
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
};
//# sourceMappingURL=/build/es2015/helpers/create-message-handler.js.map