{"remainingRequest":"/Users/fagunrain/Desktop/Work/eBiz/untitled folder/material-dashboard-angular2-v2.0.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/fagunrain/Desktop/Work/eBiz/untitled folder/material-dashboard-angular2-v2.0.0/node_modules/core-js/modules/es6.date.to-string.js","dependencies":[{"path":"/Users/fagunrain/Desktop/Work/eBiz/untitled folder/material-dashboard-angular2-v2.0.0/node_modules/core-js/modules/es6.date.to-string.js","mtime":1468790626000},{"path":"/Users/fagunrain/Desktop/Work/eBiz/untitled folder/material-dashboard-angular2-v2.0.0/node_modules/cache-loader/dist/cjs.js","mtime":1524247543663},{"path":"/Users/fagunrain/Desktop/Work/eBiz/untitled folder/material-dashboard-angular2-v2.0.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var DateProto    = Date.prototype\n  , INVALID_DATE = 'Invalid Date'\n  , TO_STRING    = 'toString'\n  , $toString    = DateProto[TO_STRING]\n  , getTime      = DateProto.getTime;\nif(new Date(NaN) + '' != INVALID_DATE){\n  require('./_redefine')(DateProto, TO_STRING, function toString(){\n    var value = getTime.call(this);\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}",null]}