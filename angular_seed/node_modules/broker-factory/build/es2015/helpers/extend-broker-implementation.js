import * as tslib_1 from "tslib";
import { PORT_MAP } from './port-map';
export const extendBrokerImplementation = (partialBrokerImplementation) => {
    // @todo The spread operator can't be used here because TypeScript does not believe that partialBrokerImplementation is an object.
    return Object.assign({}, partialBrokerImplementation, {
        connect: ({ call }) => {
            return () => tslib_1.__awaiter(this, void 0, void 0, function* () {
                const { port1, port2 } = new MessageChannel();
                const portId = yield call('connect', { port: port1 }, [port1]);
                PORT_MAP.set(port2, portId);
                return port2;
            });
        },
        disconnect: ({ call }) => {
            return (port) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                const portId = PORT_MAP.get(port);
                if (portId === undefined) {
                    throw new Error('The given port is not connected.');
                }
                yield call('disconnect', { portId });
            });
        }
    });
};
//# sourceMappingURL=/build/es2015/helpers/extend-broker-implementation.js.map