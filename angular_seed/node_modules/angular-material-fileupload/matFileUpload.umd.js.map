{"version":3,"file":"matFileUpload.umd.js","sources":["../src/lib/matFileUploadQueue/matFileUploadQueue.component.ts","../src/lib/matFileUpload/matFileUpload.component.ts","../src/lib/bytes.pipe.ts","../src/lib/fileUploadInputFor.directive.ts","../src/lib/matFileUpload.module.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, QueryList, ViewChildren, Input, ContentChildren, forwardRef } from '@angular/core';\nimport { MatFileUpload } from './../matFileUpload/matFileUpload.component';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\n\n/**\n * A material design file upload queue component.\n */\n@Component({\n    selector: 'mat-file-upload-queue',\n    templateUrl: `matFileUploadQueue.component.html`,\n    exportAs: 'matFileUploadQueue',\n  })\n  export class MatFileUploadQueue implements OnDestroy {\n\n    @ContentChildren(forwardRef(() => MatFileUpload)) fileUploads: QueryList<MatFileUpload>;\n\n    /** Subscription to remove changes in files. */\n    private _fileRemoveSubscription: Subscription | null;\n\n    /** Subscription to changes in the files. */\n    private _changeSubscription: Subscription;\n\n    /** Combined stream of all of the file upload remove change events. */\n    get fileUploadRemoveEvents() {\n        return merge(...this.fileUploads.map(fileUpload => fileUpload.removeEvent));\n    }\n\n    private files: Array<any> = [];\n\n    /* Http request input bindings */\n    @Input()\n    httpUrl: string;\n\n    @Input()\n    httpRequestHeaders: HttpHeaders | {\n      [header: string]: string | string[];\n    } = new HttpHeaders().set(\"Content-Type\", \"multipart/form-data\");\n\n    @Input()\n    httpRequestParams: HttpParams | {\n      [param: string]: string | string[];\n    } = new HttpParams();\n\n    @Input()\n    fileAlias: string = \"file\";\n\n    ngAfterViewInit() {\n      // When the list changes, re-subscribe\n      this._changeSubscription = this.fileUploads.changes.pipe(startWith(null)).subscribe(() => {\n        if (this._fileRemoveSubscription) {\n          this._fileRemoveSubscription.unsubscribe();\n        }\n        this._listenTofileRemoved();\n      });\n    }\n\n    private _listenTofileRemoved(): void {\n      this._fileRemoveSubscription = this.fileUploadRemoveEvents.subscribe((event: MatFileUpload) => {\n        this.files.splice(event.id, 1);\n      });\n    }\n\n    add(file: any) {\n      this.files.push(file);\n    }\n\n    public uploadAll() {\n      this.fileUploads.forEach((fileUpload) => { fileUpload.upload() });\n    }\n\n    public removeAll() {\n      this.files.splice(0, this.files.length);\n    }\n\n    ngOnDestroy() {\n      if (this.files) {\n        this.removeAll();\n      }\n    }\n\n}","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, Optional, Inject, forwardRef } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { MatFileUploadQueue } from '../matFileUploadQueue/matFileUploadQueue.component';\n\n\n/**\n * A material design file upload component.\n */\n@Component({\n    selector: 'mat-file-upload',\n    templateUrl: `./matFileUpload.component.html`,\n    exportAs: 'matFileUpload',\n    host: {\n      'class': 'mat-file-upload',\n    },\n    styleUrls: ['./../matFileUploadQueue.scss'],\n  })\n  export class MatFileUpload implements OnDestroy {\n\n    constructor(\n      private HttpClient: HttpClient\n      ,@Inject(forwardRef(() => MatFileUploadQueue)) public matFileUploadQueue: MatFileUploadQueue\n    ) {\n\n        if(matFileUploadQueue) {\n          this.httpUrl = matFileUploadQueue.httpUrl || this.httpUrl;\n          this.httpRequestHeaders = matFileUploadQueue.httpRequestHeaders || this.httpRequestHeaders;\n          this.httpRequestParams = matFileUploadQueue.httpRequestParams || this.httpRequestParams;\n          this.fileAlias = matFileUploadQueue.fileAlias || this.fileAlias;\n        }\n\n    }\n\n    private isUploading:boolean = false;\n\n\n\n    /* Http request input bindings */\n    @Input()\n    httpUrl: string = 'http://localhost:8080';\n\n    @Input()\n    httpRequestHeaders: HttpHeaders | {\n      [header: string]: string | string[];\n    } = new HttpHeaders().set(\"Content-Type\", \"multipart/form-data\");\n\n    @Input()\n    httpRequestParams: HttpParams | {\n      [param: string]: string | string[];\n    } = new HttpParams();\n\n    @Input()\n    fileAlias: string = \"file\";\n\n    @Input()\n    get file(): any {\n      return this._file;\n    }\n    set file(file: any) {\n      this._file = file;\n      this.total = this._file.size;\n    }\n\n    @Input()\n    set id(id: number) {\n      this._id = id;\n    }\n    get id(): number {\n      return this._id;\n    }\n\n    /** Output  */\n    @Output() removeEvent = new EventEmitter<MatFileUpload>();\n    @Output() onUpload = new EventEmitter();\n\n    private progressPercentage: number = 0;\n    public loaded: number = 0;\n    private total: number = 0;\n    private _file: any;\n    private _id: number;\n    private fileUploadSubscription: any;\n\n    public upload(): void {\n      this.isUploading = true;\n      // How to set the alias?\n      let formData = new FormData();\n      formData.set(this.fileAlias, this._file, this._file.name);\n      this.fileUploadSubscription = this.HttpClient.post(this.httpUrl, formData, {\n        headers: this.httpRequestHeaders,\n        observe: \"events\",\n        params: this.httpRequestParams,\n        reportProgress: true,\n        responseType: \"json\"\n      }).subscribe((event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progressPercentage = Math.floor( event.loaded * 100 / event.total );\n          this.loaded = event.loaded;\n          this.total = event.total;\n        }\n        this.onUpload.emit({ file: this._file, event: event });\n      }, (error: any) => {\n        if (this.fileUploadSubscription) {\n          this.fileUploadSubscription.unsubscribe();\n        }\n        this.isUploading = false;\n        this.onUpload.emit({ file: this._file, event: event });\n      });\n    }\n\n    public remove(): void {\n      if (this.fileUploadSubscription) {\n        this.fileUploadSubscription.unsubscribe();\n      }\n      this.removeEvent.emit(this);\n    }\n\n    ngOnDestroy() {\n      console.log('file '+ this._file.name + ' destroyed...');\n    }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'bytes'})\nexport class BytesPipe implements PipeTransform {\n  public transform(bytes: number): string {\n    if (isNaN(parseFloat('' + bytes)) || !isFinite(bytes)) return '-';\n    if (bytes <= 0 ) return '0';\n    var units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'],\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, Math.floor(number))).toFixed(1) +  ' ' + units[number];\n  }\n}","import {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\n\n/**\n * A material design file upload queue component.\n */\n@Directive({\n    selector: 'input[fileUploadInputFor], div[fileUploadInputFor]',\n  })\n  export class FileUploadInputFor  {\n\n\n    private _queue: any = null;\n    private _element: HTMLElement;\n    @Output() public onFileSelected: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    constructor(private element: ElementRef) {\n        this._element = this.element.nativeElement;\n    }\n\n\n    @Input('fileUploadInputFor')\n    set fileUploadQueue(value: any) {\n        if (value) {\n            this._queue = value;\n        }\n    }\n\n    @HostListener('change')\n    public onChange(): any {\n      let files = this.element.nativeElement.files;\n      this.onFileSelected.emit(files);\n\n      for (var i = 0; i < files.length; i++) {\n        this._queue.add(files[i]);\n     }\n     this.element.nativeElement.value = '';\n    }\n\n    @HostListener('drop', [ '$event' ])\n    public onDrop(event: any): any {\n      let files = event.dataTransfer.files;\n      this.onFileSelected.emit(files);\n\n      for (var i = 0; i < files.length; i++) {\n        this._queue.add(files[i]);\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      this.element.nativeElement.value = '';\n    }\n\n    @HostListener('dragover', [ '$event' ])\n    public onDropOver(event: any): any {\n        event.preventDefault();\n    }\n\n  }","import { NgModule } from '@angular/core';\nimport { MatFileUpload } from './matFileUpload/matFileUpload.component';\nimport { MatFileUploadQueue } from './matFileUploadQueue/matFileUploadQueue.component';\nimport { FileUploadInputFor } from './fileUploadInputFor.directive';\n\nimport { MatProgressBarModule, MatCardModule, MatButtonModule } from '@angular/material';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BytesPipe } from './bytes.pipe';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatProgressBarModule,\n    MatIconModule,\n    MatCardModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  declarations: [\n    MatFileUpload,\n    MatFileUploadQueue,\n    FileUploadInputFor,\n    BytesPipe\n  ],\n  exports: [\n    MatFileUpload,\n    MatFileUploadQueue,\n    FileUploadInputFor,\n    BytesPipe\n  ]\n})\nexport class MatFileUploadModule { }"],"names":["MatFileUploadQueue","HttpHeaders","HttpParams","merge","startWith","ContentChildren","forwardRef","MatFileUpload","QueryList","Input","HttpClient","EventEmitter","HttpEventType","Output","Inject","BytesPipe","Pipe","FileUploadInputFor","HostListener","Directive","ElementRef","MatFileUploadModule","NgModule","MatButtonModule","MatProgressBarModule","MatIconModule","MatCardModule","HttpClientModule","CommonModule"],"mappings":"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"}