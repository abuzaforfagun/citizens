import { CommonModule } from '@angular/common';
import { InjectionToken, NgModule } from '@angular/core';
import { audioContextFactory } from './audio-context-factory';
import { AudioContextProxy } from './audio-context-proxy';
import { isSupportedFactory } from './is-supported-factory';
import { latencyHintToken } from './latency-hint-token';
export { AudioContextProxy as AudioContext };
export var isSupported = new InjectionToken('IS_SUPPORTED_PROMISE');
var ɵ0 = isSupportedFactory;
var AudioContextModule = /** @class */ (function () {
    function AudioContextModule() {
    }
    AudioContextModule.forRoot = function (latencyHint) {
        return {
            ngModule: AudioContextModule,
            providers: [
                { deps: [latencyHintToken], provide: AudioContextProxy, useFactory: audioContextFactory },
                { provide: latencyHintToken, useValue: latencyHint }
            ]
        };
    };
    AudioContextModule.forChild = function () {
        return {
            ngModule: AudioContextModule
        };
    };
    AudioContextModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    providers: [
                        { provide: isSupported, useFactory: ɵ0 }
                    ]
                },] },
    ];
    return AudioContextModule;
}());
export { AudioContextModule };
export { ɵ0 };
//# sourceMappingURL=/build/es2015/audio-context.module.js.map