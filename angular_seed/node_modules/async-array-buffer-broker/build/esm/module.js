var _this = this;
import * as tslib_1 from "tslib";
import { createBroker } from 'broker-factory';
export var wrap = createBroker({
    allocate: function (_a) {
        var call = _a.call;
        return function (length) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, call('allocate', { length: length })];
            });
        }); };
    },
    deallocate: function (_a) {
        var notify = _a.notify;
        return function (arrayBuffer) {
            notify('deallocate', { arrayBuffer: arrayBuffer }, [arrayBuffer]);
        };
    }
});
export var load = function (url) {
    var worker = new Worker(url);
    return wrap(worker);
};
//# sourceMappingURL=/build/es2015/module.js.map