export var wrapAudioBufferCopyChannelMethodsSubarray = function (audioBuffer) {
    audioBuffer.copyFromChannel = (function (copyFromChannel) {
        return function (destination, channelNumber, startInChannel) {
            if (startInChannel === void 0) { startInChannel = 0; }
            if (startInChannel < audioBuffer.length && audioBuffer.length - startInChannel < destination.length) {
                return copyFromChannel.call(audioBuffer, destination.subarray(0, audioBuffer.length - startInChannel), channelNumber, startInChannel);
            }
            return copyFromChannel.call(audioBuffer, destination, channelNumber, startInChannel);
        };
    })(audioBuffer.copyFromChannel);
    audioBuffer.copyToChannel = (function (copyToChannel) {
        return function (source, channelNumber, startInChannel) {
            if (startInChannel === void 0) { startInChannel = 0; }
            if (startInChannel < audioBuffer.length && audioBuffer.length - startInChannel < source.length) {
                return copyToChannel.call(audioBuffer, source.subarray(0, audioBuffer.length - startInChannel), channelNumber, startInChannel);
            }
            return copyToChannel.call(audioBuffer, source, channelNumber, startInChannel);
        };
    })(audioBuffer.copyToChannel);
};
//# sourceMappingURL=/build/es2015/wrappers/audio-buffer-copy-channel-methods-subarray.js.map