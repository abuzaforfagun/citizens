import { createInvalidStateError } from '../factories/invalid-state-error';
export var wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = function (nativeAudioBufferSourceNode) {
    nativeAudioBufferSourceNode.start = (function (start) {
        var isScheduled = false;
        return function (when, offset, duration) {
            if (when === void 0) { when = 0; }
            if (offset === void 0) { offset = 0; }
            if (isScheduled) {
                throw createInvalidStateError();
            }
            start.call(nativeAudioBufferSourceNode, when, offset, duration);
            isScheduled = true;
        };
    })(nativeAudioBufferSourceNode.start);
};
//# sourceMappingURL=/build/es2015/wrappers/audio-buffer-source-node-start-method-consecutive-calls.js.map