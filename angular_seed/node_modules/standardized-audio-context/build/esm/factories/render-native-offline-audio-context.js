import { cacheTestResult } from '../helpers/cache-test-result';
import { testPromiseSupport } from '../support-testers/promise';
var isSupportingPromises = function (nativeOfflineAudioContext) { return cacheTestResult(testPromiseSupport, function () { return testPromiseSupport(nativeOfflineAudioContext); }); };
export var createRenderNativeOfflineAudioContext = function (createNativeGainNode) {
    return function (nativeOfflineAudioContext) {
        // Bug #21: Safari does not support promises yet.
        if (isSupportingPromises(nativeOfflineAudioContext)) {
            return nativeOfflineAudioContext.startRendering();
        }
        return new Promise(function (resolve) {
            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
            var gainNode = createNativeGainNode(nativeOfflineAudioContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                gain: 0
            });
            nativeOfflineAudioContext.oncomplete = function (event) {
                gainNode.disconnect();
                resolve(event.renderedBuffer);
            };
            gainNode.connect(nativeOfflineAudioContext.destination);
            nativeOfflineAudioContext.startRendering();
        });
    };
};
//# sourceMappingURL=/build/es2015/factories/render-native-offline-audio-context.js.map