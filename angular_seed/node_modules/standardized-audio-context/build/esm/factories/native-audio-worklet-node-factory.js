import * as tslib_1 from "tslib";
import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';
export var createNativeAudioWorkletNodeFactory = function (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNotSupportedError) {
    return function (nativeContext, nativeAudioWorkletNodeConstructor, name, processorDefinition, options) {
        if (nativeAudioWorkletNodeConstructor !== null) {
            try {
                // Bug #86: Chrome Canary does not invoke the process() function if the corresponding AudioWorkletNode has no output.
                var nativeAudioWorkletNode = (options.numberOfInputs !== 0 && options.numberOfOutputs === 0) ?
                    new nativeAudioWorkletNodeConstructor(nativeContext, name, tslib_1.__assign({}, options, { numberOfOutputs: 1, outputChannelCount: [1], parameterData: tslib_1.__assign({}, options.parameterData, { hasNoOutput: 1 }) })) :
                    new nativeAudioWorkletNodeConstructor(nativeContext, name, options);
                /*
                 * Bug #61: Overwriting the property accessors is necessary as long as some browsers have no native implementation to
                 * achieve a consistent behavior.
                 */
                Object.defineProperties(nativeAudioWorkletNode, {
                    channelCount: {
                        get: function () { return options.channelCount; },
                        set: function () {
                            throw createInvalidStateError();
                        }
                    },
                    channelCountMode: {
                        get: function () { return 'explicit'; },
                        set: function () {
                            throw createInvalidStateError();
                        }
                    }
                });
                return nativeAudioWorkletNode;
            }
            catch (err) {
                // Bug #60: Chrome Canary throws an InvalidStateError instead of a NotSupportedError.
                if (err.code === 11 && nativeContext.state !== 'closed') {
                    throw createNotSupportedError();
                }
                throw err;
            }
        }
        // Bug #61: Only Chrome Canary has an implementation of the AudioWorkletNode yet.
        if (processorDefinition === undefined) {
            throw createNotSupportedError();
        }
        testClonabilityOfAudioWorkletNodeOptions(options);
        return createNativeAudioWorkletNodeFaker(nativeContext, processorDefinition, options);
    };
};
//# sourceMappingURL=/build/es2015/factories/native-audio-worklet-node-factory.js.map