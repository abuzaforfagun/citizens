import * as tslib_1 from "tslib";
import { getNativeContext } from '../helpers/get-native-context';
var DEFAULT_OPTIONS = {
    channelCount: 1,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 6
};
export var createChannelMergerNodeConstructor = function (createChannelMergerNodeRenderer, createNativeChannelMergerNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) {
    return /** @class */ (function (_super) {
        tslib_1.__extends(ChannelMergerNode, _super);
        function ChannelMergerNode(context, options) {
            if (options === void 0) { options = DEFAULT_OPTIONS; }
            var _this = this;
            var nativeContext = getNativeContext(context);
            var mergedOptions = tslib_1.__assign({}, DEFAULT_OPTIONS, options);
            var nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
            var channelMergerNodeRenderer = (isNativeOfflineAudioContext(nativeContext)) ? createChannelMergerNodeRenderer() : null;
            _this = _super.call(this, context, nativeChannelMergerNode, channelMergerNodeRenderer) || this;
            return _this;
        }
        return ChannelMergerNode;
    }(noneAudioDestinationNodeConstructor));
};
//# sourceMappingURL=/build/es2015/factories/channel-merger-node-constructor.js.map