export var createAudioParamRenderer = function () {
    var automations = [];
    return {
        record: function (automation) {
            automations.push(automation);
        },
        replay: function (audioParam) {
            for (var _i = 0, automations_1 = automations; _i < automations_1.length; _i++) {
                var automation = automations_1[_i];
                if (automation.type === 'exponentialRampToValue') {
                    var endTime = automation.endTime, value = automation.value;
                    audioParam.exponentialRampToValueAtTime(value, endTime);
                }
                else if (automation.type === 'linearRampToValue') {
                    var endTime = automation.endTime, value = automation.value;
                    audioParam.linearRampToValueAtTime(value, endTime);
                }
                else if (automation.type === 'setTarget') {
                    var startTime = automation.startTime, target = automation.target, timeConstant = automation.timeConstant;
                    audioParam.setTargetAtTime(target, startTime, timeConstant);
                }
                else if (automation.type === 'setValue') {
                    var startTime = automation.startTime, value = automation.value;
                    audioParam.setValueAtTime(value, startTime);
                }
                else if (automation.type === 'setValueCurve') {
                    var duration = automation.duration, startTime = automation.startTime, values = automation.values;
                    // @todo TypeScript is expecting values to be an array of numbers.
                    audioParam.setValueCurveAtTime(values, startTime, duration);
                }
                else {
                    throw new Error("Can't apply an unkown automation.");
                }
            }
        }
    };
};
//# sourceMappingURL=/build/es2015/factories/audio-param-renderer.js.map