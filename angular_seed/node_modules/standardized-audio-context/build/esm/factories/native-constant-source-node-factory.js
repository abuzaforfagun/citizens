import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';
import { cacheTestResult } from '../helpers/cache-test-result';
import { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from '../support-testers/audio-scheduled-source-node-start-method-negative-parameters';
import { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from '../support-testers/audio-scheduled-source-node-stop-method-negative-parameters';
import { testConstantSourceNodeAccurateSchedulingSupport } from '../support-testers/constant-source-node-accurate-scheduling';
import { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../wrappers/audio-scheduled-source-node-start-method-negative-parameters';
import { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../wrappers/audio-scheduled-source-node-stop-method-negative-parameters';
import { wrapConstantSourceNodeAccurateScheduling } from '../wrappers/constant-source-node-accurate-scheduling';
export var createNativeConstantSourceNodeFactory = function (createNativeConstantSourceNodeFaker) {
    return function (nativeContext, options) {
        // Bug #62: Edge & Safari do not support ConstantSourceNodes.
        // @todo TypeScript doesn't know yet about createConstantSource().
        if (nativeContext.createConstantSource === undefined) {
            return createNativeConstantSourceNodeFaker(nativeContext, options);
        }
        var nativeConstantSourceNode = nativeContext.createConstantSource();
        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);
        if (options.offset !== nativeConstantSourceNode.offset.value) {
            nativeConstantSourceNode.offset.value = options.offset;
        }
        // Bug #44: Only Chrome & Opera throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () { return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext); })) {
            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);
        }
        // Bug #44: No browser does throw a RangeError yet.
        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () { return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext); })) {
            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);
        }
        // Bug #70: Firefox does not schedule ConstantSourceNodes accurately.
        if (!cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, function () { return testConstantSourceNodeAccurateSchedulingSupport(nativeContext); })) {
            wrapConstantSourceNodeAccurateScheduling(nativeConstantSourceNode, nativeContext);
        }
        return nativeConstantSourceNode;
    };
};
//# sourceMappingURL=/build/es2015/factories/native-constant-source-node-factory.js.map