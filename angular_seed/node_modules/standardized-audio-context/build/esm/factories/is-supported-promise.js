import { cacheTestResult } from '../helpers/cache-test-result';
export var createIsSupportedPromise = function (browsernizr, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testChannelMergerNodeSupport) {
    if (browsernizr.promises &&
        browsernizr.typedarrays &&
        browsernizr.webaudio &&
        cacheTestResult(testAudioContextCloseMethodSupport, function () { return testAudioContextCloseMethodSupport(); }) &&
        cacheTestResult(testAudioContextOptionsSupport, function () { return testAudioContextOptionsSupport(); })) {
        return Promise
            .all([
            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, function () {
                return testAudioContextDecodeAudioDataMethodTypeErrorSupport();
            }),
            cacheTestResult(testChannelMergerNodeSupport, function () { return testChannelMergerNodeSupport(); })
        ])
            .then(function (_a) {
            var audioContextDecodeAudioDataMethodTypeErrorSupport = _a[0], channelMergerNodeSupport = _a[1];
            return audioContextDecodeAudioDataMethodTypeErrorSupport && channelMergerNodeSupport;
        });
    }
    return Promise.resolve(false);
};
//# sourceMappingURL=/build/es2015/factories/is-supported-promise.js.map