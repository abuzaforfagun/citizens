var _this = this;
import * as tslib_1 from "tslib";
import { renderInputsOfAudioNode } from '../helpers/render-inputs-of-audio-node';
export var createAudioDestinationNodeRenderer = function () {
    var nativeAudioDestinationNode = null;
    return {
        render: function (proxy, nativeOfflineAudioContext) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (nativeAudioDestinationNode !== null) {
                            return [2 /*return*/, nativeAudioDestinationNode];
                        }
                        nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
                        return [4 /*yield*/, renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, nativeAudioDestinationNode];
                }
            });
        }); }
    };
};
//# sourceMappingURL=/build/es2015/factories/audio-destination-node-renderer-factory.js.map