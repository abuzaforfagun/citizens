var _this = this;
import * as tslib_1 from "tslib";
import { NODE_TO_PROCESSOR_MAPS } from '../globals';
import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';
var createAudioWorkletProcessorPromise = function (processorDefinition, audioWorkletNodeOptions) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    var clonedAudioWorkletNodeOptions;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, cloneAudioWorkletNodeOptions(audioWorkletNodeOptions)];
            case 1:
                clonedAudioWorkletNodeOptions = _a.sent();
                return [2 /*return*/, new processorDefinition(clonedAudioWorkletNodeOptions)];
        }
    });
}); };
export var createAudioWorkletProcessor = function (nativeContext, nativeAudioWorkletNode, processorDefinition, audioWorkletNodeOptions) {
    var nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);
    if (nodeToProcessorMap === undefined) {
        nodeToProcessorMap = new WeakMap();
        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);
    }
    var audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorDefinition, audioWorkletNodeOptions);
    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
    return audioWorkletProcessorPromise;
};
//# sourceMappingURL=/build/es2015/helpers/create-audio-worklet-processor.js.map