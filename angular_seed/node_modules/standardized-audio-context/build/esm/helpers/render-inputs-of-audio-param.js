import { getAudioNodeRenderer } from '../helpers/get-audio-node-renderer';
import { getAudioParamConnections } from '../helpers/get-audio-param-connections';
export var renderInputsOfAudioParam = function (context, audioParam, nativeOfflineAudioContext, nativeAudioParam) {
    var audioParamConnections = getAudioParamConnections(context, audioParam);
    return Promise
        .all(Array
        .from(audioParamConnections.inputs)
        .map(function (_a) {
        var source = _a[0], output = _a[1];
        var audioNodeRenderer = getAudioNodeRenderer(source);
        return audioNodeRenderer
            .render(source, nativeOfflineAudioContext)
            .then(function (node) { return node.connect(nativeAudioParam, output); });
    }));
};
//# sourceMappingURL=/build/es2015/helpers/render-inputs-of-audio-param.js.map