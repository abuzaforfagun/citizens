export var testAudioNodeDisconnectMethodSupport = function (nativeAudioContext) {
    return new Promise(function (resolve) {
        var analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);
        var dummy = nativeAudioContext.createGain();
        // Safari does not play buffers which contain just one frame.
        var ones = nativeAudioContext.createBuffer(1, 2, 44100);
        var channelData = ones.getChannelData(0);
        channelData[0] = 1;
        channelData[1] = 1;
        var source = nativeAudioContext.createBufferSource();
        source.buffer = ones;
        source.loop = true;
        source.connect(analyzer);
        analyzer.connect(nativeAudioContext.destination);
        source.connect(dummy);
        source.disconnect(dummy);
        analyzer.onaudioprocess = function (event) {
            var chnnlDt = event.inputBuffer.getChannelData(0);
            if (Array.prototype.some.call(chnnlDt, function (sample) { return sample === 1; })) {
                resolve(true);
            }
            else {
                resolve(false);
            }
            source.stop();
            analyzer.onaudioprocess = null;
            source.disconnect(analyzer);
            analyzer.disconnect(nativeAudioContext.destination);
        };
        source.start();
    });
};
//# sourceMappingURL=/build/es2015/support-testers/audio-node-disconnect-method.js.map