import { getAudioNodeRenderer } from '../helpers/get-audio-node-renderer';
import { getAudioParamConnections } from '../helpers/get-audio-param-connections';
export const renderInputsOfAudioParam = (context, audioParam, nativeOfflineAudioContext, nativeAudioParam) => {
    const audioParamConnections = getAudioParamConnections(context, audioParam);
    return Promise
        .all(Array
        .from(audioParamConnections.inputs)
        .map(([source, output]) => {
        const audioNodeRenderer = getAudioNodeRenderer(source);
        return audioNodeRenderer
            .render(source, nativeOfflineAudioContext)
            .then((node) => node.connect(nativeAudioParam, output));
    }));
};
//# sourceMappingURL=/build/es2015/helpers/render-inputs-of-audio-param.js.map